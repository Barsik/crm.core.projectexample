{"version":3,"sources":["webpack:///./src/app/foobarApp.tsx","webpack:///./src/components/foobar/foobarView.tsx"],"names":["ReactDOM","render","title","document","getElementById","Content","Footer","Sider","columns","dataIndex","sorter","width","props","state","data","pagination","loading","fetch","params","this","setState","Retrieve","async","entityName","response","console","log","value","componentDidMount","Layout","collapsible","className","Menu","theme","mode","defaultSelectedKeys","Item","key","Icon","type","style","margin","Table","pageSize","rowKey","record","accountid","dataSource","textAlign","React","Component"],"mappings":"mWAAA,cACA,WACA,YACA,OAGAA,EAASC,OACP,gBAAC,UAAM,CAACC,MAAM,yCACdC,SAASC,eAAe,U,shECR1B,cACA,YACA,SACQC,EAAA,SAAAA,QAASC,EAAA,SAAAA,OAAQC,EAAA,SAAAA,MAMnBC,EAAU,CACd,CACEN,MAAO,eACPO,UAAW,OACXC,QAAQ,EACRC,MAAO,OAET,CACET,MAAO,QACPO,UAAW,uBAIf,cACE,WAAYG,GAAZ,MACE,YAAMA,IAAM,K,OAEd,EAAAC,MAAQ,CACNC,KAAM,GACNC,WAAY,GACZC,SAAS,GAOX,EAAAC,MAAQ,SAAOC,G,YAAA,IAAAA,MAAA,I,sFAES,OADtBC,KAAKC,SAAS,CAAEJ,SAAS,IACH,GAAM,UAAOK,SAAS,CAC1CC,OAAO,EACPC,WAAY,a,cAFRC,EAAgB,SAItBC,QAAQC,IAAIF,GACZL,KAAKC,SAAS,CACZJ,SAAS,EACTF,KAAMU,EAASG,Q,cAwCrB,OA/DoC,OAU5B,YAAAC,kBAAN,W,0FACE,SAAMT,KAAKF,S,cAAX,S,YAgBF,YAAAhB,OAAA,WACE,OACE,gBAAC,EAAA4B,OAAM,KACL,gBAACtB,EAAK,CACJuB,aAAW,GAEX,uBAAKC,UAAU,SACf,gBAAC,EAAAC,KAAI,CAACC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,MACrD,gBAAC,EAAAH,KAAKI,KAAI,CAACC,IAAI,KACb,gBAAC,EAAAC,KAAI,CAACC,KAAK,SACX,wBAAMR,UAAU,YAAU,gBAE5B,gBAAC,EAAAC,KAAKI,KAAI,CAACC,IAAI,KACb,gBAAC,EAAAC,KAAI,CAACC,KAAK,WACX,wBAAMR,UAAU,YAAU,aAE5B,gBAAC,EAAAC,KAAKI,KAAI,CAACC,IAAI,KACb,gBAAC,EAAAC,KAAI,CAACC,KAAK,SACX,wBAAMR,UAAU,YAAU,eAIhC,gBAAC,EAAAF,OAAM,KACL,gBAACxB,EAAO,CAACmC,MAAO,CAAEC,OAAQ,QACxB,gBAAC,EAAAC,MAAK,CACJ3B,WAAY,CAAE4B,SAAU,GACxBnC,QAASA,EACToC,OAAQ,SAACC,GAAgB,OAAAA,EAAOC,WAChCC,WAAY5B,KAAKN,MAAMC,KACvBE,QAASG,KAAKN,MAAMG,WAGxB,gBAACV,EAAM,CAACkC,MAAO,CAAEQ,UAAW,WAAU,eAIhD,EA/DA,CAAoCC,EAAMC,W","file":"2.9a6733c48d0dcd50168d.hot-update.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport FooBar from \"../components/foobar/foobarView\";\r\nimport \"./../assets/main.scss\"\r\n\r\n//asda\r\nReactDOM.render(\r\n  <FooBar title=\"React Webpack Typescript Sass готов!\" />,\r\n  document.getElementById(\"root\")\r\n);\r\n","import * as React from \"react\";\r\nimport webapi from 'xrm-webapi-client'\r\nimport { Layout, Menu, Icon, Table } from 'antd';\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\ninterface IProps {\r\n  title: string;\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    sorter: true,\r\n    width: '20%'\r\n  },\r\n  {\r\n    title: 'Адрес',\r\n    dataIndex: 'address1_composite',\r\n  },\r\n];\r\n\r\nexport default class FooBar extends React.Component<IProps, any> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    data: [],\r\n    pagination: {},\r\n    loading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.fetch();\r\n  }\r\n\r\n  fetch = async (params = {}) => {\r\n    this.setState({ loading: true });\r\n    const response: any = await webapi.Retrieve({\r\n      async: true,\r\n      entityName: 'account'\r\n    }) as any;\r\n    console.log(response);\r\n    this.setState({\r\n      loading: false,\r\n      data: response.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Sider\r\n          collapsible\r\n        >\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\">\r\n              <Icon type=\"user\" />\r\n              <span className=\"nav-text\">Организации</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <Icon type=\"upload\" />\r\n              <span className=\"nav-text\">Загрузки</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\">\r\n              <Icon type=\"user\" />\r\n              <span className=\"nav-text\">Контакты</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Content style={{ margin: '5px' }}>\r\n            <Table\r\n              pagination={{ pageSize: 3 }}\r\n              columns={columns}\r\n              rowKey={(record: any) => record.accountid}\r\n              dataSource={this.state.data}\r\n              loading={this.state.loading}\r\n            />\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Columbus</Footer>\r\n        </Layout>\r\n      </Layout>);\r\n  }\r\n}\r\n"],"sourceRoot":""}