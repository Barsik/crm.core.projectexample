{"version":3,"sources":["webpack:///./src/app/templateMergeTagsBuilderApp.tsx","webpack:///./src/components/transactionalEmail/templateMergeTagsBuilder/index.tsx","webpack:///./src/components/transactionalEmail/templateMergeTagsBuilder/mergeTagItem.tsx"],"names":["ReactDOM","render","document","getElementById","Content","props","handleAddTagClick","bind","state","metadata","tags","templateId","componentDidMount","this","GetMetadata","fetch","Xrm","Page","context","getClientUrl","json","body","value","map","entity","key","SchemaName","DisplayName","UserLocalizedLabel","Label","attributes","Attributes","attribute","attributeKey","LogicalName","attributeValue","setState","console","log","defaultEntityMetadata","length","tag","entitySchemaName","undefined","attributeSchemaName","mergeTagName","crmId","index","push","renderTags","Layout","Button","onClick","type","size","React","Component","Option","onChangeEntityMetadata","onChangeAttributeMetadata","onChangeTag","onDelete","onSave","event","target","cmb_mergetag","cmb_attributepath","cmb_entityname","cmb_name","DynamicsWebApi","prototype","create","then","id","catch","error","currentEntityMetadataAttributes","currentEntityMetadata","find","m","Select","showSearch","style","width","placeholder","optionFilterProp","onChange","defaultValue","entityMetadata","attributeMetadata","Input","icon"],"mappings":"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","file":"3.9fabe8f3044e01ec4c7b.hot-update.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"./../assets/main.scss\"\r\nimport TemplateMergeTagsBuilder from \"../components/transactionalEmail/templateMergeTagsBuilder\";\r\n\r\nReactDOM.render(\r\n  <TemplateMergeTagsBuilder />,\r\n  document.getElementById(\"root\")\r\n);\r\n","import * as React from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { MergeTagsBuilderState } from \"../../../models/mergeTagsBuilderState\";\r\nimport { EntityMetadata } from \"../../../models/entityMetadata\";\r\nimport { SimpleKeyValue } from \"../../../models/simpleKeyValue\";\r\nimport MergeTagItem from \"./mergeTagItem\";\r\nimport { MergeTag } from \"../../../models/mergeTag\";\r\n// import { WebResourceUtils } from \"../../../common/webResourceUtils\";\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface IProps {\r\n}\r\n\r\nexport default class TemplateMergeTagsBuilder extends React.Component<IProps, MergeTagsBuilderState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.handleAddTagClick = this.handleAddTagClick.bind(this);\r\n\r\n        this.state = {\r\n            metadata: [],\r\n            tags: [],\r\n            templateId: ''\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.GetMetadata();\r\n    }\r\n\r\n    async GetMetadata() {\r\n        try {\r\n            var response = await fetch(`${Xrm.Page.context.getClientUrl()}/api/data/v8.0/EntityDefinitions?$select=DisplayName,SchemaName&$filter=LogicalName eq 'contact' or LogicalName eq 'cmb_config'&$expand=Attributes($select=LogicalName,DisplayName)`);\r\n            const body = await response.json();\r\n\r\n            var metadata: Array<EntityMetadata> = body.value.map(function (entity: any): EntityMetadata {\r\n                return {\r\n                    key: entity.SchemaName,\r\n                    value: (entity.DisplayName != null && entity.DisplayName.UserLocalizedLabel != null) ? entity.DisplayName.UserLocalizedLabel.Label : null,\r\n                    attributes: entity.Attributes.map(function (attribute: any): SimpleKeyValue {\r\n                        const attributeKey = attribute.LogicalName;\r\n                        const attributeValue = (attribute.DisplayName != null && attribute.DisplayName.UserLocalizedLabel != null) ? attribute.DisplayName.UserLocalizedLabel.Label : null;\r\n\r\n                        return {\r\n                            key: attributeKey,\r\n                            value: attributeValue ?? attributeKey\r\n                        };\r\n                    })\r\n                };\r\n            });\r\n\r\n            this.setState({ ...this.state, metadata: metadata });\r\n\r\n            console.log(this.state);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleAddTagClick() {\r\n\r\n        var defaultEntityMetadata = (this.state.metadata.length > 0) ? this.state.metadata[0] : null;\r\n\r\n        var tag: MergeTag = {\r\n            entitySchemaName: defaultEntityMetadata != null ? defaultEntityMetadata.key : undefined,\r\n            attributeSchemaName: undefined,\r\n            mergeTagName: '',\r\n            crmId: undefined,\r\n            index: -1,\r\n            templateId: this.state.templateId\r\n        };\r\n\r\n        var tags: Array<MergeTag> = this.state.tags;\r\n        tags.push(tag);\r\n        this.setState({ ...this.state, tags: tags });\r\n    }\r\n\r\n    renderTags() {\r\n        return (\r\n            <table>\r\n                {this.state.tags.length > 0 ?\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Сущность</td>\r\n                            <td>Атрибут</td>\r\n                            <td>Тег</td>\r\n                        </tr>\r\n                    </thead>\r\n                    :\r\n                    <thead></thead>\r\n                }\r\n                <tbody>\r\n                    {this.state.tags.map((tag, index) => {\r\n                        tag.index = index;\r\n                        return (\r\n                            <MergeTagItem tag={tag} metadata={this.state.metadata} />\r\n                        );\r\n                    })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <Content>\r\n                        <div>\r\n                            {this.renderTags()}\r\n                        </div>\r\n                        <div>\r\n                            <Button onClick={this.handleAddTagClick} type=\"link\" size={'small'}>\r\n                                Добавить</Button>\r\n                        </div>\r\n                        <hr />\r\n                        <div>\r\n                            <Button>Закрыть</Button>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </div>);\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { Select, Button, Input } from \"antd\";\r\nimport { MergeTag } from \"../../../models/mergeTag\";\r\nimport { EntityMetadata } from \"../../../models/entityMetadata\";\r\nimport { SimpleKeyValue } from \"../../../models/simpleKeyValue\";\r\n// import webapi from 'xrm-webapi-client';\r\n\r\nimport * as DynamicsWebApi from \"dynamics-web-api\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\ninterface MergeTagItemProps {\r\n    tag: MergeTag;\r\n    metadata: Array<EntityMetadata>;\r\n}\r\n\r\ninterface MergeTagItemState extends MergeTag {\r\n\r\n}\r\n\r\nexport default class MergeTagItem extends React.Component<MergeTagItemProps, MergeTagItemState> {\r\n    constructor(props: MergeTagItemProps) {\r\n        super(props);\r\n\r\n        this.onChangeEntityMetadata = this.onChangeEntityMetadata.bind(this);\r\n        this.onChangeAttributeMetadata = this.onChangeAttributeMetadata.bind(this);\r\n        this.onChangeTag = this.onChangeTag.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n\r\n        this.state = {\r\n            attributeSchemaName: props.tag.attributeSchemaName,\r\n            crmId: props.tag.crmId,\r\n            entitySchemaName: props.tag.entitySchemaName,\r\n            index: props.tag.index,\r\n            mergeTagName: props.tag.mergeTagName,\r\n            templateId: props.tag.templateId\r\n        };\r\n    }\r\n\r\n    onChangeEntityMetadata(value: string) {\r\n        this.setState({ ...this.state, entitySchemaName: value, attributeSchemaName: undefined, mergeTagName: '' });\r\n    }\r\n\r\n    onChangeAttributeMetadata(value: string) {\r\n        this.setState({ ...this.state, attributeSchemaName: value });\r\n    }\r\n\r\n    onChangeTag(event: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({ ...this.state, mergeTagName: event.target.value });\r\n    }\r\n\r\n    onDelete() {\r\n\r\n    }\r\n\r\n    onSave() {\r\n\r\n        var cmb_mergetag = {\r\n            cmb_attributepath: this.state.attributeSchemaName,\r\n            cmb_entityname: this.state.entitySchemaName,\r\n            cmb_name: this.state.mergeTagName,\r\n        };\r\n        debugger;\r\n        //call dynamicsWebApi.create function\r\n        DynamicsWebApi.prototype.create(cmb_mergetag, \"cmb_mergetags\").then(function (id) {\r\n            //do something with id here\r\n            console.log(id);\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n        // var request = {\r\n        //     entityName: \"cmb_mergetag\",\r\n        //     entity: {\r\n        //         cmb_attributepath: this.state.attributeSchemaName,\r\n        //         cmb_entityname: this.state.entitySchemaName,\r\n        //         cmb_name: this.state.mergeTagName,\r\n        //         \"cmb_emailtemplateid@odata.bind\": \"/cmb_emailtemplates(8C58C913-B948-EA11-A242-005056B401F3)\"\r\n        //     }\r\n        // };\r\n\r\n        // try {\r\n        //     var response = await webapi.Create(request);\r\n        //     console.log(\".... \" + response);\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n\r\n        // webapi.Create(request)\r\n        //     .then(function (response: any) {\r\n        //         // Process response\r\n        //     })\r\n        //     .catch(function (error: any) {\r\n        //         // Handle error\r\n        //     });\r\n    }\r\n\r\n    currentEntityMetadataAttributes(): Array<SimpleKeyValue> {\r\n\r\n        var currentEntityMetadata = this.props.metadata.find(m => m.key == this.state.entitySchemaName);\r\n\r\n        if (currentEntityMetadata != null) {\r\n            return currentEntityMetadata.attributes;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Выберите сущность\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={this.onChangeEntityMetadata}\r\n                        defaultValue={this.state.entitySchemaName}\r\n                    >\r\n                        {this.props.metadata.map((entityMetadata) => <Option value={entityMetadata.key}>{entityMetadata.value}</Option>)}\r\n                    </Select>\r\n                </td>\r\n                <td>\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Выберите поле\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={this.onChangeAttributeMetadata}\r\n                        defaultValue={this.state.attributeSchemaName}\r\n                    >\r\n                        {this.currentEntityMetadataAttributes().map((attributeMetadata) => <Option value={attributeMetadata.key}>{attributeMetadata.value}</Option>)}\r\n                    </Select>\r\n                </td>\r\n                <td>\r\n                    <Input placeholder=\"Тег\" onChange={this.onChangeTag} />\r\n                </td>\r\n                <td>\r\n                    <Button icon=\"save\" onClick={this.onSave}></Button>\r\n                </td>\r\n                <td>\r\n                    <Button type=\"danger\" icon=\"delete\"></Button>\r\n                </td>\r\n            </tr>);\r\n    }\r\n}"],"sourceRoot":""}