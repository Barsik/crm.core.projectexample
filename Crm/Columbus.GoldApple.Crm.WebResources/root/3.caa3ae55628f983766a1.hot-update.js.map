{"version":3,"sources":["webpack:///./src/app/templateMergeTagsBuilderApp.tsx","webpack:///./src/components/transactionalEmail/templateMergeTagsBuilder/index.tsx"],"names":["ReactDOM","render","document","getElementById","Header","Footer","Content","props","state","metadata","componentDidMount","this","test","console","log","request","collection","key","navigationProperty","navigationPropertyKey","metadataAttributeType","dynamicsWebApi","retrieveRequest","then","entityMetadata","DisplayName","LocalizedLabels","Label","updateRequest","MetadataId","mergeLabels","entity","catch","error","Layout","Button","type","size","React","Component"],"mappings":"mWAAA,cACA,WACA,OACA,gBAEAA,EAASC,OACP,gBAAC,UAAwB,MACzBC,SAASC,eAAe,U,shECP1B,cACA,SAEA,YAEQC,EAAA,SAAAA,OAAQC,EAAA,SAAAA,OAAQC,EAAA,SAAAA,QAKxB,cACI,WAAYC,GAAZ,MACI,YAAMA,IAAM,K,OACZ,EAAKC,MAAQ,CACTC,SAAU,I,EA2DtB,OA/DsD,OAQ5C,YAAAC,kBAAN,W,0FACI,SAAMC,KAAKC,Q,cAAX,S,YAGE,YAAAA,KAAN,W,kFACIC,QAAQC,IAAI,aAERC,EAAU,CACVC,WAAY,oBACZC,IAAK,wBACLC,mBAAoB,aACpBC,sBAAuB,0BACvBC,sBAAuB,mDAGvBC,EAAiB,IAAI,WAEVC,gBAAgBP,GAASQ,MAAK,SAAUC,GAEnDA,EAAeC,YAAYC,gBAAgB,GAAGC,MAAQ,eAEtD,IAAIC,EAAgB,CAChBZ,WAAY,oBACZC,IAAKO,EAAeK,WACpBC,aAAa,EACbC,OAAQP,GAGZ,OAAOH,EAAeO,cAAcA,MACrCI,OAAM,SAAUC,O,WAKvB,YAAAhC,OAAA,WACI,OACI,2BACI,gBAAC,EAAAiC,OAAM,KACH,gBAAC9B,EAAM,eACP,gBAACE,EAAO,KACJ,sCAGA,2BACI,gBAAC,EAAA6B,OAAM,CAACC,KAAK,OAAOC,KAAM,SAAO,cAIzC,gBAAChC,EAAM,KACH,gBAAC,EAAA8B,OAAM,CAACC,KAAK,WAAS,aACtB,gBAAC,EAAAD,OAAM,oBAK/B,EA/DA,CAAsDG,EAAMC,W","file":"3.caa3ae55628f983766a1.hot-update.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"./../assets/main.scss\"\r\nimport TemplateMergeTagsBuilder from \"../components/transactionalEmail/templateMergeTagsBuilder\";\r\n\r\nReactDOM.render(\r\n  <TemplateMergeTagsBuilder />,\r\n  document.getElementById(\"root\")\r\n);\r\n","import * as React from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { MergeTagsBuilderState } from \"../../../models/mergeTagsBuilderState\";\r\nimport DynamicsWebApi from \"dynamics-web-api\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\ninterface IProps {\r\n}\r\n\r\nexport default class TemplateMergeTagsBuilder extends React.Component<IProps, MergeTagsBuilderState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            metadata: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.test();\r\n    }\r\n\r\n    async test() {\r\n        console.log('asdasdasd');\r\n\r\n        var request = {\r\n            collection: 'EntityDefinitions',\r\n            key: 'LogicalName=\"account\"',\r\n            navigationProperty: 'Attributes',\r\n            navigationPropertyKey: 'LogicalName=\"firstname\"',\r\n            metadataAttributeType: 'Microsoft.Dynamics.CRM.StringAttributeMetadata'\r\n        };\r\n\r\n        var dynamicsWebApi = new DynamicsWebApi();\r\n\r\n        dynamicsWebApi.retrieveRequest(request).then(function (entityMetadata) {\r\n            //1. change label\r\n            entityMetadata.DisplayName.LocalizedLabels[0].Label = 'Organization';\r\n            //2. configure update request\r\n            var updateRequest = {\r\n                collection: 'EntityDefinitions',\r\n                key: entityMetadata.MetadataId,\r\n                mergeLabels: true,\r\n                entity: entityMetadata\r\n            };\r\n            //3. call update request\r\n            return dynamicsWebApi.updateRequest(updateRequest);\r\n        }).catch(function (error) {\r\n            //catch an error\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <Header>Header</Header>\r\n                    <Content>\r\n                        <div>\r\n                            Content\r\n                        </div>\r\n                        <div>\r\n                            <Button type=\"link\" size={'small'}>\r\n                                добавить</Button>\r\n                        </div>\r\n                    </Content>\r\n                    <Footer>\r\n                        <Button type=\"primary\">Сохранить</Button>\r\n                        <Button>Закрыть</Button>\r\n                    </Footer>\r\n                </Layout>\r\n            </div>);\r\n    }\r\n}\r\n"],"sourceRoot":""}