{"version":3,"sources":["webpack:///./src/app/templateMergeTagsBuilderApp.tsx","webpack:///./src/components/transactionalEmail/templateMergeTagsBuilder/index.tsx","webpack:///./src/components/transactionalEmail/templateMergeTagsBuilder/mergeTagItem.tsx"],"names":["ReactDOM","render","document","getElementById","Header","Footer","Content","props","handleAddTagClick","bind","state","metadata","tags","componentDidMount","this","GetMetadata","fetch","Xrm","Page","context","getClientUrl","json","body","value","map","entity","key","SchemaName","DisplayName","UserLocalizedLabel","Label","attributes","Attributes","attribute","LogicalName","setState","console","log","push","entitySchemaName","attributeSchemaName","mergeTagName","renderTags","tag","Layout","Button","type","size","React","Component"],"mappings":"mWAAA,cACA,WACA,OACA,gBAEAA,EAASC,OACP,gBAAC,UAAwB,MACzBC,SAASC,eAAe,U,0vECP1B,cACA,SAIA,YAGQC,EAAA,SAAAA,OAAQC,EAAA,SAAAA,OAAQC,EAAA,SAAAA,QAKxB,cACI,WAAYC,GAAZ,MACI,YAAMA,IAAM,K,OAEZ,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAK,GAErD,EAAKC,MAAQ,CACTC,SAAU,GACVC,KAAM,I,EA0ElB,OAlFsD,OAY5C,YAAAC,kBAAN,W,0FACI,SAAMC,KAAKC,e,cAAX,S,YAGE,YAAAA,YAAN,W,oGAEuB,O,sBAAA,GAAMC,MAASC,IAAIC,KAAKC,QAAQC,eAAc,kL,OAChD,SADE,SACaC,Q,cAAtBC,EAAO,SAETX,EAAkCW,EAAKC,MAAMC,KAAI,SAAUC,GAC3D,MAAO,CACHC,IAAKD,EAAOE,WACZJ,MAA8B,MAAtBE,EAAOG,aAAgE,MAAzCH,EAAOG,YAAYC,mBAA8BJ,EAAOG,YAAYC,mBAAmBC,MAAQ,KACrIC,WAAYN,EAAOO,WAAWR,KAAI,SAAUS,GACxC,MAAO,CACHP,IAAKO,EAAUC,YACfX,MAAiC,MAAzBU,EAAUL,aAAmE,MAA5CK,EAAUL,YAAYC,mBAA8BI,EAAUL,YAAYC,mBAAmBC,MAAQ,aAM9JhB,KAAKqB,SAAS,EAAD,KAAMrB,KAAKJ,OAAK,CAAEC,SAAUA,KAEzCyB,QAAQC,IAAIvB,KAAKJ,O,+BAGjB0B,QAAQC,IAAI,G,+BAIpB,YAAA7B,kBAAA,WAOeM,KAAKJ,MAAME,KAEjB0B,KARe,CAChBC,iBAAiB,UACjBC,oBAAoB,YACpBC,aAAa,MAQrB,YAAAC,WAAA,WACI,OACI5B,KAAKJ,MAAME,KAAKY,KAAI,SAAAmB,GAAO,uBAAC,UAAY,UAIhD,YAAA1C,OAAA,WACI,OACI,2BACI,gBAAC,EAAA2C,OAAM,KACH,gBAACxC,EAAM,eACP,gBAACE,EAAO,KACJ,2BACKQ,KAAK4B,YAEV,2BACI,gBAAC,EAAAG,OAAM,CAACC,KAAK,OAAOC,KAAM,SAAO,cAIzC,gBAAC1C,EAAM,KACH,gBAAC,EAAAwC,OAAM,CAACC,KAAK,WAAS,aACtB,gBAAC,EAAAD,OAAM,oBAK/B,EAlFA,CAAsDG,EAAMC,W,wlBCb5D,cAQA,cACI,WAAY1C,GAAZ,MACI,YAAMA,IAAM,K,OACZ,EAAKG,MAAQ,G,EAWrB,OAd0C,OAQtC,YAAAT,OAAA,WACI,OACI,oCAIZ,EAdA,CAA0C+C,EAAMC,W","file":"3.fe517f614cf0d5abfb55.hot-update.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"./../assets/main.scss\"\r\nimport TemplateMergeTagsBuilder from \"../components/transactionalEmail/templateMergeTagsBuilder\";\r\n\r\nReactDOM.render(\r\n  <TemplateMergeTagsBuilder />,\r\n  document.getElementById(\"root\")\r\n);\r\n","import * as React from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { MergeTagsBuilderState } from \"../../../models/mergeTagsBuilderState\";\r\nimport { EntityMetadata } from \"../../../models/entityMetadata\";\r\nimport { SimpleKeyValue } from \"../../../models/simpleKeyValue\";\r\nimport MergeTagItem from \"./mergeTagItem\";\r\nimport { MergeTag } from \"../../../models/mergeTag\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\ninterface IProps {\r\n}\r\n\r\nexport default class TemplateMergeTagsBuilder extends React.Component<IProps, MergeTagsBuilderState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.handleAddTagClick = this.handleAddTagClick.bind(this);\r\n\r\n        this.state = {\r\n            metadata: [],\r\n            tags: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.GetMetadata();\r\n    }\r\n\r\n    async GetMetadata() {\r\n        try {\r\n            var response = await fetch(`${Xrm.Page.context.getClientUrl()}/api/data/v8.0/EntityDefinitions?$select=DisplayName,SchemaName&$filter=LogicalName eq 'contact' or LogicalName eq 'lead'&$expand=Attributes($select=LogicalName,DisplayName)`);\r\n            const body = await response.json();\r\n\r\n            var metadata: Array<EntityMetadata> = body.value.map(function (entity: any): EntityMetadata {\r\n                return {\r\n                    key: entity.SchemaName,\r\n                    value: (entity.DisplayName != null && entity.DisplayName.UserLocalizedLabel != null) ? entity.DisplayName.UserLocalizedLabel.Label : null,\r\n                    attributes: entity.Attributes.map(function (attribute: any): SimpleKeyValue {\r\n                        return {\r\n                            key: attribute.LogicalName,\r\n                            value: (attribute.DisplayName != null && attribute.DisplayName.UserLocalizedLabel != null) ? attribute.DisplayName.UserLocalizedLabel.Label : null\r\n                        };\r\n                    })\r\n                };\r\n            });\r\n\r\n            this.setState({ ...this.state, metadata: metadata });\r\n\r\n            console.log(this.state);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleAddTagClick() {\r\n        var tag: MergeTag = {\r\n            entitySchemaName:'contact',\r\n            attributeSchemaName:'firstname',\r\n            mergeTagName:''\r\n        };\r\n\r\n        var tags = this.state.tags;\r\n\r\n        tags.push(tag);\r\n    }\r\n\r\n    renderTags() {\r\n        return (\r\n            this.state.tags.map(tag => <MergeTagItem />)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <Header>Header</Header>\r\n                    <Content>\r\n                        <div>\r\n                            {this.renderTags}\r\n                        </div>\r\n                        <div>\r\n                            <Button type=\"link\" size={'small'}>\r\n                                Добавить</Button>\r\n                        </div>\r\n                    </Content>\r\n                    <Footer>\r\n                        <Button type=\"primary\">Сохранить</Button>\r\n                        <Button>Закрыть</Button>\r\n                    </Footer>\r\n                </Layout>\r\n            </div>);\r\n    }\r\n}\r\n","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport default class MergeTagItem extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                TAG!\r\n            </div>);\r\n    }\r\n}"],"sourceRoot":""}